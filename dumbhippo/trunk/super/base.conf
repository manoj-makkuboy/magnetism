<?xml version="1.0" encoding="UTF-8"?><!-- -*- tab-width: 4; indent-tabs-mode: t -*- -->
<superconf>
	<!-- The public host name of this server; you probably want to override
		 this in your ~/.super.conf -->
	<parameter name="serverHost">localhost.localdomain</parameter>

	<!-- you definitely need to change this if you're virtualizing -->
	<parameter name="tomcatHttpPort">8080</parameter>

	<!-- Base for public URLs -->
	<parameter name="baseurl">http://$serverHost:$tomcatHttpPort</parameter>

	<!-- let anyone log in as anyone (turn on in ~/.super.conf for debugging) -->
	<parameter name="disableAuthentication">false</parameter>

	<!-- note, default is 3873 -->
	<parameter name="jbossInvokerLocatorPort">$((baseport+50))</parameter>

	<parameter name="basedir">$home/dhdeploy</parameter>
	<parameter name="baseport">21000</parameter>
	<parameter name="svndir">$superdir/..</parameter>

	<parameter name="darfile">$superdir/dumbhippo.dar</parameter>
	
	<parameter name="dbPassword">MangoChutney</parameter>

	<parameter name="mysqlPort">$((baseport+0))</parameter>
	<parameter name="mysqlEnabled">yes</parameter>
	<parameter name="mysqlTargetdir">$basedir/mysql</parameter>
	<parameter name="mysqlOptions">--defaults-file=$mysqlTargetdir/conf/my.cnf</parameter>

	<parameter name="pgsqlPort">$((baseport+60))</parameter>
	<parameter name="pgsqlEnabled">no</parameter>
	<parameter name="pgsqlOptions">-h $basedir/pgsql/run -p $pgsqlPort -U postgres</parameter>

	<!-- if the client is older than this, it must upgrade itself before
         doing anything else -->
	<parameter name="clientWindowsMinimum">1.1.17</parameter>
	<!-- if the client is older than this, an upgrade is offered, but the
         old version can still run  -->
	<parameter name="clientWindowsCurrent">1.1.17</parameter>
	<!-- Download URL for the client -->
	<parameter name="clientWindowsDownload">http://devel.dumbhippo.com/download/DumbHippo-current.msi</parameter>

	<parameter name="mailHost">127.0.0.1</parameter>
	<parameter name="mailPort">25</parameter>

	<!-- for 'super watch' we sometimes want to play sounds -->
	<parameter name="playSoundCommand">/usr/bin/play %s</parameter>

	<parameter name="jnpPort">$((baseport+10))</parameter>

	<parameter name="jiveHost">127.0.0.1</parameter>
	<parameter name="jivePlainPort">$((baseport+20))</parameter>	
	<parameter name="jivePassword">MangoChutney</parameter>

	<!-- Both the jboss app and the imbot need to know the screen name ; also set 
		password below -->
	<parameter name="imbotScreenName">PleaseSetThisInSuperConf</parameter>

	<!-- you have to create an Amazon web services account and put the key here -->
	<parameter name="amazonAccessKeyId"></parameter>

	<!-- stuff for your ebay developer account -->
	<parameter name="ebayDevId"></parameter>
        <parameter name="ebayAppId"></parameter>
        <parameter name="ebayCertId"></parameter>

	<service name="mysql" enabled="$mysqlEnabled">
		<parameter name="targetdir">$mysqlTargetdir</parameter>
		<merge src="$superdir/mysql/files"
			   expand="yes"/>

		<targetAttributes pattern="/data/*" ignore="yes" preserve="yes"/> 
		<targetAttributes pattern="/log/*"	ignore="yes"/> 
		<targetAttributes pattern="/run/*"	ignore="yes"/>

		<parameter name="startCommand">$targetdir/scripts/mysql-start.sh</parameter>
		<parameter name="stopCommand">$targetdir/scripts/mysql-stop.sh</parameter>
		<parameter name="statusCommand">$targetdir/scripts/mysql-status.sh</parameter>
		<parameter name="consoleCommand">$targetdir/scripts/mysql-console.sh</parameter>
		<parameter name="nukeCommand">$targetdir/scripts/mysql-nuke.sh</parameter>				 
	</service>

	<service name="pgsql" enabled="$pgsqlEnabled">
		<parameter name="targetdir">$basedir/pgsql</parameter>
		<merge src="$superdir/pgsql/files"
			   expand="yes"/>

		<targetAttributes pattern="/data/*" ignore="yes" preserve="yes"/> 
		<targetAttributes pattern="/log/*"	ignore="yes"/> 
		<targetAttributes pattern="/run/*"	ignore="yes"/>

		<parameter name="startCommand">$targetdir/scripts/pgsql-start.sh</parameter>
		<parameter name="stopCommand">/usr/bin/pg_ctl -D $targetdir/data stop</parameter>
		<parameter name="statusCommand">/usr/bin/pg_ctl -D $targetdir/data status</parameter>
		<parameter name="consoleCommand">/usr/bin/psql $pgsqlOptions dumbhippo</parameter>
		<parameter name="nukeCommand">$targetdir/scripts/pgsql-nuke.sh</parameter>
	</service>

	<service name="jboss" class="JBossService">
		<requiredService service="mysql"/> <!-- or -->
		<requiredService service="pgsql"/>

		<parameter name="jbossdir">/opt/jboss</parameter>
		<parameter name="targetdir">$basedir/jboss</parameter>
		<parameter name="filesavedir">$targetdir/data/files</parameter>

		<parameter name="jrmpRmiPort">$((baseport+11))</parameter>
		<parameter name="jdwpPort">$((baseport+12))</parameter>
		<parameter name="jrmiPort">$((baseport+13))</parameter>	
		<parameter name="jrmiObjectPort">$((baseport+14))</parameter>
		<parameter name="jinvokerPort">$((baseport+15))</parameter>
		<parameter name="jbossOilInvocationLayerPort">$((baseport+16))</parameter>

		<parameter name="javaMaxHeap">256</parameter>

		<!-- Frequency to scan for new deployed archives, in milliseconds -->
		<parameter name="deployScanPeriod">1000</parameter>

		<merge src="$jbossdir/server/all"
			   exclude="$superdir/jboss/jboss.exclude"
			   symlink="yes"/>
		<!-- The 'all' config is clustered, we need a non-clustered configiration for TomCat -->
		<merge src="$jbossdir/server/default/deploy/jbossweb-tomcat55.sar/META-INF/jboss-service.xml"
			   dest="deploy/jbossweb-tomcat55.sar/META-INF/jboss-service.xml"
			   symlink="yes"/>
		<merge src="$superdir/jboss/files"
			   expand="yes"/>
		<merge src="$svndir/server/lib/mysql-connector-java-3.1.12-bin.jar"
			   dest="lib/mysql-connector-java.jar"/>
		<merge src="$svndir/server/lib/postgresql-8.1-404.jdbc3.jar"
			   dest="lib/postgresql-8.1-404.jdbc3.jar"/>
		<merge src="$svndir/server/target/classes/dumbhippo.ear"
			   dest="deploy/dumbhippo.ear"
			   hot="yes"/>

		<targetAttributes pattern="/data/files"	 ignore="yes" preserve="yes"/>
		<targetAttributes pattern="/data/**" ignore="yes"/>
		<targetAttributes pattern="/log"   ignore="yes"/> 
		<targetAttributes pattern="/run/*" ignore="yes"/> 
		<targetAttributes pattern="/tmp"   ignore="yes"/> 
		<targetAttributes pattern="/work"  ignore="yes"/> 
	
		<parameter name="startCommand">$targetdir/scripts/jboss-start.sh</parameter>
		<parameter name="stopCommand">$targetdir/scripts/jboss-stop.sh</parameter>
		<parameter name="statusCommand">$targetdir/scripts/jboss-status.sh</parameter>
		<parameter name="logFile">$targetdir/log/server.log</parameter>

		<parameter name="reloadSound">/usr/share/sounds/gtk-events/toggled.wav</parameter>
	</service>

	<service name="jive">
		<requiredService service="mysql"/> <!-- or -->
		<requiredService service="pgsql"/>
		<requiredService service="jboss"/>

		<parameter name="targetdir">$basedir/jive</parameter>
		<parameter name="jivedir">$svndir/wildfire/target</parameter>

		<parameter name="jiveSecurePort">$((baseport+21))</parameter>
		<parameter name="jiveServerPort">$((baseport+22))</parameter>
		<parameter name="jiveComponentPort">$((baseport+23))</parameter>
		<parameter name="jiveAdminPort">$((baseport+24))</parameter>
		<parameter name="jiveAdminSecurePort">$((baseport+25))</parameter>
		<parameter name="jiveJdwpPort">$((baseport+26))</parameter>
	
		<merge src="$jivedir"
			   exclude="$superdir/jive/jive.exclude"/>
		<merge src="$superdir/jive/files"
			   expand="yes"/>
		<merge src="$jivedir/plugins/hippo.jar"
			   dest="plugins/hippo.jar"/>

		<targetAttributes pattern="/logs/*"	 ignore="yes"/>
		<targetAttributes pattern="/run/*"	ignore="yes"/>

		<!-- Jive likes to rewrite its config file with different whitespace, so
			 strip leading and trailing whitespace before comparing expanded files -->
		<targetAttributes pattern="/conf/wildfire.xml" fuzzy="yes"/>

		<!-- This is the expanded version of hippo.jar -->
		<targetAttributes pattern="/plugins/hippo/" ignore="yes"/>
		<parameter name="startCommand">$targetdir/scripts/jive-start.sh</parameter>
		<parameter name="stopCommand">$targetdir/scripts/jive-stop.sh</parameter>
		<parameter name="statusCommand">$targetdir/scripts/jive-running.py</parameter>
	</service>
	
	<service name="imbot">
		<!-- dependencies not listed for now so we don't restart this thing a million times -->
		
		<parameter name="imbotPassword">PleaseSetThisInSuperConfAlso</parameter>
		
		<parameter name="targetdir">$basedir/imbot</parameter>
		<parameter name="imbotdir">$svndir/imbot/target</parameter>

		<merge src="$superdir/imbot/files"
			   expand="yes"/>
		<merge src="$imbotdir/classes/dumbhippo-imbot.jar"
			   dest="dumbhippo-imbot.jar"/>
		<merge src="$imbotdir/lib"
			   dest="lib"/>

		<targetAttributes pattern="/logs/*"	 ignore="yes"/>
		<targetAttributes pattern="/run/*"	ignore="yes"/>

		<parameter name="startCommand">$targetdir/scripts/imbot-start.sh</parameter>
		<parameter name="stopCommand">$targetdir/scripts/imbot-stop.sh</parameter>
		<parameter name="statusCommand">$targetdir/scripts/imbot-running.sh</parameter>
	</service>

	<service name="hungry">
		<!-- this one isn't really managed by super, we just use super to build the config file -->
		<parameter name="targetdir">$basedir/hungry</parameter>

		<targetAttributes pattern="/run/*"	ignore="yes"/>

		<merge src="$superdir/hungry/files"
			   expand="yes"/>

		<parameter name="startCommand">$targetdir/scripts/hungry-start.sh</parameter>
		<parameter name="stopCommand">$targetdir/scripts/hungry-stop.sh</parameter>
		<parameter name="statusCommand">$targetdir/scripts/hungry-running.sh</parameter>
	</service>
	
</superconf>
